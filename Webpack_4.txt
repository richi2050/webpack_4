- Introducción a Webpack
	- Es un empaquetador de javascript, empaquedaro de módulos de JS
	-User expirence:
		Se busca que la aplicación funcione, que sea rapida , que cumpla todas la necesidades, se actualice (escalable), responda a la interacción y al final sea un gran producto de calidad.
	- Developer Experience
		Escribir una aplicación de manera Eficiente,  generar un código totalmente limpio, Ampliar la tecnología para la resolución del problema, seguir un conjunto de reglas y convenciones, al salir a producción  la optimizacion del desarrollo.

CLI = command-line interface.
----------------------------------------------------------------------------------------------------------------------
instalar las dependencias  de Webpack
 npm i webpack --save = escritop corto
 npm install webpack --save = escrito largo
 npm install webpack --save --save-exact = guarda solo la version exacta sin que se instale actualizaciones
 npm install webpack --save-dev = se instala en dependencia de desarrollo

-----------------------------------------------------------------------------------------------------------------
Creando nuestro primer bundle con Webpack
 desde la version 4 webpack necesita un CLI
 npm install webpack-cli --save-dev
 webpack-cli =  nos ayuda a usar comando de webpack 
 para verificar o saber los comando que podemos usar con webpack-cli usamos la siguiente linea
 npx webpack-cli --help

 npx webpack  --entry ./index.js  --output ./bundle.js
 Aqui se indica que toda la entrada de archivo index.js  va a salir en el archivo bundle.js es decir compila todo el codigo javascript de index en build

npx webpack  --entry ./index.js  --output ./bundle.js --mode development = aqui se pasa en modo desarrollo 

----------------------------------------------------------------------------------------------------------

Iniciando un webpack.config
se genera un archivo webpack.config.js
 donde se pone el siguiente codigo 


const path = require('path');  /*se instancoia el modulo de path de node*/

/* El siguiente codigo en realidad es igual a lo siguiente */
/* npx webpack  --entry ./index.js  --output ./bundle.js --mode development */
module.exports = {
  entry: './index.js',
  mode: 'development',
  output: {
    path: path.resolve(__dirname), /*direccion relativca de posicion actual*/
    filename: 'bundle.js'  /*nombre de bundel */
  }
}

se ejecuta con npx webpack
o se genera un script dentro de package.jsom
"scripts": {
    "test": "echo \"Error: no test specified\" && exit 1",
    "build" :"webpack"
  },

------------------------------------------------------------------------------------------------------------------------

Cargando configuraciones por defecto y personalizadas
Configuracion personal del webpack config  se genera el archivo en la siguiente ruta 

en external se copian los archivos index.js y index.html
/external/inicialwebpack.config.js  

const path = require('path');

module.exports = {
  entry: path.resolve(__dirname,'index.js')/* direccion relativa dopnde se encuentra el*/,
  mode: 'development',
  output: {
    path: path.resolve(__dirname,'dist'), /*se configura en el lugar que se va a compilar */
    filename: 'bundle.js'
  }
}

la configuracion en elk webpack es la suiguiente 
"build_external" :"webpack --config ./external/inicialwebpack.config.js"
